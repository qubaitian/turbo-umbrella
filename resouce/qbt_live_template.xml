<templateSet group="qbt">
  <template name="gmc" value="@GetMapping(&quot;$url$&quot;)&#10;public ResponseEntity a$time$(HttpServletRequest request) {&#10;    try {&#10;        String s = &quot;$answer$&quot;;&#10;        JSONObject jsonObject = new JSONObject(s);&#10;        Map map = jsonObject.toMap();&#10;        return ResponseEntity.ok(map);&#10;    } catch (Exception e) {&#10;        Map map = new HashMap();&#10;        map.put(&quot;code&quot;, 400);&#10;        map.put(&quot;msg&quot;, e.getMessage());&#10;        return ResponseEntity.status(400).body(map);&#10;    }&#10;}" description="get mock controller" toReformat="false" toShortenFQNames="true">
    <variable name="url" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="time" expression="date(&quot;HHmmss&quot;)" defaultValue="" alwaysStopAt="false" />
    <variable name="answer" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="pmc" value="@PostMapping(&quot;$url$&quot;)&#10;public ResponseEntity a$time$(HttpServletRequest request) {&#10;    try {&#10;        String s = &quot;$answer$&quot;;&#10;        JSONObject jsonObject = new JSONObject(s);&#10;        Map map = jsonObject.toMap();&#10;        return ResponseEntity.ok(map);&#10;    } catch (Exception e) {&#10;        Map map = new HashMap();&#10;        map.put(&quot;code&quot;, 400);&#10;        map.put(&quot;msg&quot;, e.getMessage());&#10;        return ResponseEntity.status(400).body(map);&#10;    }&#10;}" description="post mock controller" toReformat="false" toShortenFQNames="true">
    <variable name="url" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="time" expression="date(&quot;HHmmss&quot;)" defaultValue="" alwaysStopAt="false" />
    <variable name="answer" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="tlt" value="String $s$ = &quot;&quot;; //这个s 是系统推荐的变量名 函数是 suggestVariableName()&#10;$s$ = &quot;$var$&quot;;   //输入的 var&#10;$s$ = &quot;$var1$&quot;;  //var1和var相同&#10;$s$ = &quot;$var2$&quot;;  //var2是underscoresToSpaces(var) 下划线变成空格" description="测试各种live template 的参数" toReformat="true" toShortenFQNames="true">
    <variable name="s" expression="suggestVariableName()" defaultValue="" alwaysStopAt="false" />
    <variable name="var" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="var1" expression="var" defaultValue="" alwaysStopAt="true" />
    <variable name="var2" expression="underscoresToSpaces(var)" defaultValue="" alwaysStopAt="true" />
  </template>
  <template name="todo" value="//TODO $DATE$ $USER$: $END$" description="" toReformat="false" toShortenFQNames="true">
    <variable name="DATE" expression="date()" defaultValue="" alwaysStopAt="true" />
    <variable name="USER" expression="user()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="qwer" value="dfdfdfdf" description="" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="rt" value="@Autowired&#10;Repository&lt;$Name$&gt; $name$Repository;&#10;&#10;@Test&#10;public void test$Name$Repository() throws Exception {&#10;    $name$Repository.add(new $Name$());&#10;    $Name$ $name$ = new $Name$();&#10;    $name$Repository.add($name$);&#10;    $name$Repository.add(new $Name$());&#10;    Long id = (Long) getter($name$, &quot;id&quot;);&#10;    $Name$ $name$1 = $name$Repository.findById(id);&#10;    toStr($name$1);&#10;    $name$Repository.delete($name$1);&#10;    $Name$ $name$2 = $name$Repository.findById(id);&#10;    toStr($name$2);&#10;    List&lt;$Name$&gt; all = $name$Repository.findAll(null);&#10;    for ($Name$ $name$3 : all) {&#10;        toStr($name$3);&#10;    }&#10;}" description="repository 简单测试" toReformat="true" toShortenFQNames="true">
    <variable name="Name" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="name" expression="decapitalize(Name)" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="adsfadf" value="adsf" description="" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
</templateSet>