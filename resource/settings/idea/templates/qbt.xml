<templateSet group="qbt">
  <template name="rt" value="@Autowired&#10;Repository&lt;$Name$&gt; $name$Repository;&#10;&#10;@Test&#10;public void test$Name$Repository() throws Exception {&#10;    $name$Repository.add(new $Name$());&#10;    $Name$ $name$ = new $Name$();&#10;    $name$Repository.add($name$);&#10;    $name$Repository.add(new $Name$());&#10;    Long id = (Long) SimpleReflect.getter($name$, &quot;id&quot;);&#10;    $Name$ $name$1 = $name$Repository.findById(id);&#10;    SimpleReflect.toStr($name$1);&#10;    $name$Repository.delete($name$1);&#10;    $Name$ $name$2 = $name$Repository.findById(id);&#10;    SimpleReflect.toStr($name$2);&#10;    List&lt;$Name$&gt; all = $name$Repository.findAll(null);&#10;    for ($Name$ $name$3 : all) {&#10;        SimpleReflect.toStr($name$3);&#10;    }&#10;}" description="repository 简单测试" toReformat="true" toShortenFQNames="true">
    <variable name="Name" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="name" expression="decapitalize(Name)" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="gmc" value="@GetMapping(&quot;$url$&quot;)&#10;public ResponseEntity a$time$(HttpServletRequest request) {&#10;    try {&#10;        String s = &quot;$answer$&quot;;&#10;        JSONObject jsonObject = new JSONObject(s);&#10;        Map map = jsonObject.toMap();&#10;        return ResponseEntity.ok(map);&#10;    } catch (Exception e) {&#10;        Map map = new HashMap();&#10;        map.put(&quot;code&quot;, 400);&#10;        map.put(&quot;msg&quot;, e.getMessage());&#10;        return ResponseEntity.status(400).body(map);&#10;    }&#10;}" description="get mock controller" toReformat="false" toShortenFQNames="true">
    <variable name="url" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="time" expression="date(&quot;HHmmss&quot;)" defaultValue="" alwaysStopAt="false" />
    <variable name="answer" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="pmc" value="@PostMapping(&quot;$url$&quot;)&#10;public ResponseEntity a$time$(HttpServletRequest request) {&#10;    try {&#10;        String s = &quot;$answer$&quot;;&#10;        JSONObject jsonObject = new JSONObject(s);&#10;        Map map = jsonObject.toMap();&#10;        return ResponseEntity.ok(map);&#10;    } catch (Exception e) {&#10;        Map map = new HashMap();&#10;        map.put(&quot;code&quot;, 400);&#10;        map.put(&quot;msg&quot;, e.getMessage());&#10;        return ResponseEntity.status(400).body(map);&#10;    }&#10;}" description="post mock controller" toReformat="false" toShortenFQNames="true">
    <variable name="url" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="time" expression="date(&quot;HHmmss&quot;)" defaultValue="" alwaysStopAt="false" />
    <variable name="answer" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="psv" value="public static void $name$(){&#10;    $END$&#10;}" description="public static void" toReformat="false" toShortenFQNames="true">
    <variable name="name" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
  <template name="tryc" value="try {&#10;    $END$&#10;} catch (Exception e) {&#10;    e.printStackTrace();&#10;}&#10;return null;" description="" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_CODE" value="true" />
    </context>
  </template>
</templateSet>